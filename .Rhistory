mutate(n = if_else(name == "releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, color = name)) +
geom_col() +
geom_col(aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(0, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, color = name)) +
geom_col() +
geom_col(aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(0, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, color = name)) +
geom_col() +
geom_col(aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, fill = name)) +
geom_col() +
geom_col(aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, fill = name)) +
geom_line() +
geom_col(aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, fill = name)) +
geom_line() +
geom_col(data = filter(in_out, name = "Bookings"), aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, fill = name)) +
geom_line() +
geom_col(data = filter(in_out, name == "Bookings"), aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, fill = name)) +
geom_line() +
geom_col(data = filter(in_out, name == "Bookings"), aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, color = name)) +
geom_line() +
geom_col(data = filter(in_out, name == "Bookings"), aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = day, y = n, color = name)) +
geom_line() +
geom_col(data = filter(in_out, name == "Bookings"), aes(y = delta), color = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
scales::comma
blogdown::serve_site()
# Setup ========================================================================
library(ojodb)
library(ggthemes)
library(tidyverse)
library(plotly)
library(shiny)
options(scipen = 999)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
# books <- ojo_tbl(schema = "ocdc",
#                  table = "arrest") |>
#   collect()
# write_rds(books, "./data/ocdc_books.rds")
books <- read_rds("./data/ocdc_books.rds")
blogdown::stop_server()
books <- ojo_tbl(schema = "ocdc",
table = "arrest") |>
collect()
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
# OCDC Daily Population
plot_pop <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = paste0("Date: ", day, "<br>",
"Population: ", format(pop, big.mark = ",")),
group = 1,
)) +
geom_line(color = "#FFC107") +
scale_y_continuous(limits = c(0, NA),
labels = scales::comma) +
# # SQ lines
geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "SQ 780\nEffective Date",
x = ymd("2017-7-01"), y = 800, hjust = 1.1) +
geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "SQ 788\nEffective Date",
x = ymd("2018-7-01"), y = 1200, hjust = -0.1) +
# # Jail trust line
geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control",
x = ymd("2020-07-01"), y = 800, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "People incarcerated",
x = "Day")
# theme(
#   text = element_text(family = "Ubuntu Mono"),
#   plot.title = element_text(hjust = 0.5, color = "white"),
#   plot.subtitle = element_text(hjust = 0.5, color = "white"),
#   panel.background = element_rect(fill='transparent'), #transparent panel bg
#   plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
#   panel.grid.major = element_line(color = "black"),
#   panel.grid.minor = element_blank(), #remove minor gridlines
#   legend.background = element_rect(fill='transparent'), #transparent legend bg
#   legend.box.background = element_rect(fill='transparent'), #transparent legend panel,
#   axis.text = element_text(color = "white"),
#   axis.title = element_text(color = "white")
# )
# ggplotly(plot_pop, tooltip = "text") |>
#   config(displayModeBar = FALSE) |>
#   style(textposition = "right")
# layout(title = list(text = paste0("OCDC Daily Population Count",
#                                   "<br><sup>",
#                                   "Taken at 12pm noon each day, 2016- 2022",
#                                   "</sup>")))
# OCDC Daily Population
plot_pop_months <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = "",
group = 1
)) +
geom_line(color = "#FFC107",
aes(text = paste0("Month: ", day, "<br>",
"Avg. Population: ", format(pop, big.mark = ",")))
) +
scale_y_continuous(limits = c(0, 3100),
labels = scales::comma) +
# lines
geom_hline(yintercept = 1200, linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "Intended Maximum\nJail Capacity",
x = ymd("2022-06-01"), y = 1200, hjust = -1) +
geom_hline(yintercept = 2850, linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "Highest Recorded Population\n(September 2015)",
x = ymd("2022-06-01"), y = 2850, hjust = -0.1) +
# Jail trust line
# geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control\n↓",
x = ymd("2020-07-01"), y = 2200, hjust = -0.1) +
# SQ lines
# geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", label = "SQ 780\nEffective Date\n↓",
x = ymd("2017-7-01"), y = 2600, hjust = 1.1) +
# geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", label = "SQ 788\nEffective Date\n↓",
x = ymd("2018-7-01"), y = 2200, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "Jail population at 12pm noon",
x = "Date")
ggplotly(plot_pop_months, tooltip = "text") |>
config(displayModeBar = FALSE) |>
# only affects some elements; trace 3 is the green "intended max jail capacity" line at 1,200
style(textposition = "left", traces = c(3, 5))
bk <- books |>
count(week = floor_date(book_date, "weeks"),
name = "Bookings") |>
filter(week != max(week, na.rm = T))
rl <- books |>
count(week = floor_date(release_date, "weeks"),
name = "Releases") |>
filter(week != min(week, na.rm = T))
in_out <- inner_join(bk, rl, by = "week") |>
mutate(delta = Bookings - Releases) |>
pivot_longer(cols = c("Releases", "Bookings"),
values_to = "n")
# in_out_plot <- in_out |>
#   # mutate(n = if_else(name == "releases", -1 * n, as.double(n))) |>
#   ggplot(aes(x = week, y = n, color = name)) +
#   geom_line() +
#   # geom_col(aes(y = delta), fill = "black") +
#   theme_clean() +
#   scale_y_continuous(limits = c(0, NA),
#                      labels = scales::comma) +
#   theme(legend.position = "none") +
#   labs(x = "Week",
#        y = "Total Weekly Events") +
#   facet_wrap(~name)
in_out_plot <- in_out |>
mutate(n = if_else(name == "Releases", -1 * n, as.double(n))) |>
ggplot(aes(x = week, y = n, fill = name)) +
geom_col() +
geom_col(data = filter(in_out, name == "Bookings"), aes(y = delta), fill = "black") +
theme_clean() +
scale_y_continuous(limits = c(NA, NA),
labels = scales::comma) +
theme(legend.position = "none") +
labs(x = "Week",
y = "Total Weekly Events")
ggplotly(in_out_plot) |>
config(displayModeBar = FALSE)
hu <- books |>
group_by(jacket_num) |>
summarize(
n_bookings = n(),
n_bookings_past_year = sum(book_date >= today() - years(1))
)
hu <- books |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
)
View(hu)
View(books)
hu |> filter(n_bookings > 1) |> nrow()
hu |> filter(n_bookings > 1) |> nrow() / nrow(hu)
hu |> filter(n_bookings > 1) |> nrow(books)
hu |> filter(n_bookings > 1) |> nrow() / nrow(books)
nrow(hu)
blogdown::serve_site()
books |> min(book_date)
books |> min(book_date, na.rm =- )
books |> min(book_date, na.rm =T)
min(books$book_date)
year(min(books$book_date))
max(books$book_date)
hu_now <- hu |>
filter(book_date >= today() - years(3)) |>
books |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
)
hu_now <- hu |>
filter(book_date >= today() - years(3)) |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
)
hu_now <- books |>
filter(book_date >= today() - years(3)) |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
)
View(hu_now)
blogdown::stop_server()
hu_now <- books |>
filter(book_date >= today() - years(3)) |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
) |>
filter(n >= 6)
hu_now <- books |>
filter(book_date >= today() - years(3)) |>
group_by(jacket_num) |>
summarize(
n_bookings = n()
) |>
filter(n_bookings >= 6)
blogdown::serve_site()
# Setup ========================================================================
library(ojodb)
library(ggthemes)
library(tidyverse)
library(plotly)
library(shiny)
options(scipen = 999)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
# books <- ojo_tbl(schema = "ocdc",
#                  table = "arrest") |>
#   collect()
# write_rds(books, "./data/ocdc_books.rds")
books <- read_rds("./data/ocdc_books.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
max(daily_pop$day)
max(daily_pop$day) |> format("%M/%d/%Y")
max(daily_pop$day) |> format("%m/%d/%Y")
max(daily_pop$day) |> format("%a %m/%d/%Y")
max(floor_date(books$book_date, "days")) |> format("%a %m/%d/%Y")
max(floor_date(books$book_date, "days")) |> format("%a %m/%d, %Y")
max(floor_date(books$book_date, "days")) |> format("%a %B/%d, %Y")
max(floor_date(books$book_date, "days")) |> format("%a %B %d, %Y")
max(floor_date(books$book_date, "days")) |> format("%A %B %d, %Y")
books |> count(gender)
?shortcode
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
# Setup ========================================================================
library(ojodb)
library(ggthemes)
library(tidyverse)
library(plotly)
library(shiny)
options(scipen = 999)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
books <- ojo_tbl(schema = "ocdc",
table = "arrest") |>
collect()
# write_rds(books, "./data/ocdc_books.rds")
# books <- read_rds("./data/ocdc_books.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
# OCDC Daily Population
plot_pop <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = paste0("Date: ", day, "<br>",
"Population: ", format(pop, big.mark = ",")),
group = 1,
)) +
geom_line(color = "#FFC107") +
scale_y_continuous(limits = c(0, NA),
labels = scales::comma) +
# # SQ lines
geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "SQ 780\nEffective Date",
x = ymd("2017-7-01"), y = 800, hjust = 1.1) +
geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "SQ 788\nEffective Date",
x = ymd("2018-7-01"), y = 1200, hjust = -0.1) +
# # Jail trust line
geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control",
x = ymd("2020-07-01"), y = 800, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "People incarcerated",
x = "Day")
# theme(
#   text = element_text(family = "Ubuntu Mono"),
#   plot.title = element_text(hjust = 0.5, color = "white"),
#   plot.subtitle = element_text(hjust = 0.5, color = "white"),
#   panel.background = element_rect(fill='transparent'), #transparent panel bg
#   plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
#   panel.grid.major = element_line(color = "black"),
#   panel.grid.minor = element_blank(), #remove minor gridlines
#   legend.background = element_rect(fill='transparent'), #transparent legend bg
#   legend.box.background = element_rect(fill='transparent'), #transparent legend panel,
#   axis.text = element_text(color = "white"),
#   axis.title = element_text(color = "white")
# )
# ggplotly(plot_pop, tooltip = "text") |>
#   config(displayModeBar = FALSE) |>
#   style(textposition = "right")
# layout(title = list(text = paste0("OCDC Daily Population Count",
#                                   "<br><sup>",
#                                   "Taken at 12pm noon each day, 2016- 2022",
#                                   "</sup>")))
# OCDC Daily Population
plot_pop_months <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = "",
group = 1
)) +
geom_line(color = "#FFC107",
aes(text = paste0("Month: ", day, "<br>",
"Avg. Population: ", format(pop, big.mark = ",")))
) +
scale_y_continuous(limits = c(0, 3100),
labels = scales::comma) +
# lines
geom_hline(yintercept = 1200, linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "Intended Maximum\nJail Capacity",
x = ymd("2022-06-01"), y = 1200, hjust = -1) +
geom_hline(yintercept = 2850, linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "Highest Recorded Population\n(September 2015)",
x = ymd("2022-06-01"), y = 2850, hjust = -0.1) +
# Jail trust line
# geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control\n↓",
x = ymd("2020-07-01"), y = 2200, hjust = -0.1) +
# SQ lines
# geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", label = "SQ 780\nEffective Date\n↓",
x = ymd("2017-7-01"), y = 2600, hjust = 1.1) +
# geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", label = "SQ 788\nEffective Date\n↓",
x = ymd("2018-7-01"), y = 2200, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "Jail population at 12pm noon",
x = "Date")
ggplotly(plot_pop_months, tooltip = "text") |>
config(displayModeBar = FALSE) |>
# only affects some elements; trace 3 is the green "intended max jail capacity" line at 1,200
style(textposition = "left", traces = c(3, 5))
current_pop <- books |>
filter(in_facility == "Yes")
View(current_pop)
View(current_pop)
library(data.table)
dt <- books |> as.data.table()
View(dt)
