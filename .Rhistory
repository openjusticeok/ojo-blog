fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
books <- ojo_tbl(schema = "ocdc",
table = "arrest") |>
collect()
# write_rds(books, "./data/ocdc_books.rds")
# books <- read_rds("./data/ocdc_books.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
# OCDC Daily Population
plot_pop <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = paste0("Date: ", day, "<br>",
"Population: ", format(pop, big.mark = ",")),
group = 1,
)) +
geom_line(color = "#FFC107") +
scale_y_continuous(limits = c(0, NA),
labels = scales::comma) +
# # SQ lines
geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "SQ 780\nEffective Date",
x = ymd("2017-7-01"), y = 800, hjust = 1.1) +
geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "SQ 788\nEffective Date",
x = ymd("2018-7-01"), y = 1200, hjust = -0.1) +
# # Jail trust line
geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control",
x = ymd("2020-07-01"), y = 800, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "People incarcerated",
x = "Day")
# theme(
#   text = element_text(family = "Ubuntu Mono"),
#   plot.title = element_text(hjust = 0.5, color = "white"),
#   plot.subtitle = element_text(hjust = 0.5, color = "white"),
#   panel.background = element_rect(fill='transparent'), #transparent panel bg
#   plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
#   panel.grid.major = element_line(color = "black"),
#   panel.grid.minor = element_blank(), #remove minor gridlines
#   legend.background = element_rect(fill='transparent'), #transparent legend bg
#   legend.box.background = element_rect(fill='transparent'), #transparent legend panel,
#   axis.text = element_text(color = "white"),
#   axis.title = element_text(color = "white")
# )
# ggplotly(plot_pop, tooltip = "text") |>
#   config(displayModeBar = FALSE) |>
#   style(textposition = "right")
# layout(title = list(text = paste0("OCDC Daily Population Count",
#                                   "<br><sup>",
#                                   "Taken at 12pm noon each day, 2016- 2022",
#                                   "</sup>")))
# OCDC Daily Population
plot_pop_months <- daily_pop |>
ggplot(aes(x = day,
y = pop,
text = "",
group = 1
)) +
geom_line(color = "#FFC107",
aes(text = paste0("Month: ", day, "<br>",
"Avg. Population: ", format(pop, big.mark = ",")))
) +
scale_y_continuous(limits = c(0, 3100),
labels = scales::comma) +
# lines
geom_hline(yintercept = 1200, linetype = "dashed", color = "green") +
annotate(geom = "text", color = "green", label = "Intended Maximum\nJail Capacity",
x = ymd("2022-06-01"), y = 1200, hjust = -1) +
geom_hline(yintercept = 2850, linetype = "dashed", color = "red") +
annotate(geom = "text", color = "red", label = "Highest Recorded Population\n(September 2015)",
x = ymd("2022-06-01"), y = 2850, hjust = -0.1) +
# Jail trust line
# geom_vline(xintercept = as.numeric(ymd("2020-07-01")), linetype = "dashed", color = "black") +
annotate(geom = "text", color = "black", label = "Jail Trust\nTakes Control\n↓",
x = ymd("2020-07-01"), y = 2200, hjust = -0.1) +
# SQ lines
# geom_vline(xintercept = as.numeric(ymd("2017-7-01")), linetype = "dashed", color = "red") +
annotate(geom = "text", label = "SQ 780\nEffective Date\n↓",
x = ymd("2017-7-01"), y = 2600, hjust = 1.1) +
# geom_vline(xintercept = as.numeric(ymd("2018-7-01")), linetype = "dashed", color = "green") +
annotate(geom = "text", label = "SQ 788\nEffective Date\n↓",
x = ymd("2018-7-01"), y = 2200, hjust = -0.1) +
theme_clean() +
labs(title = "",
y = "Jail population at 12pm noon",
x = "Date")
ggplotly(plot_pop_months, tooltip = "text") |>
config(displayModeBar = FALSE) |>
# only affects some elements; trace 3 is the green "intended max jail capacity" line at 1,200
style(textposition = "left", traces = c(3, 5))
current_pop <- books |>
filter(in_facility == "Yes")
View(current_pop)
View(current_pop)
library(data.table)
dt <- books |> as.data.table()
View(dt)
library(ojodb)
library(ggthemes)
library(tidyverse)
library(plotly)
library(shiny)
options(scipen = 999)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
books <- ojo_tbl(schema = "ocdc",
table = "arrest") |>
collect()
# write_rds(books, "./data/ocdc_books.rds")
# books <- read_rds("./data/ocdc_books.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
# Details report
read_bookings_by_date_details_and_charges_report <- function(filename) {
z <- read_csv(filename, trim_ws = T, col_names = F)
ds_bookings <- z %>%
mutate(
def_name = if_else(grepl("^[A-Z]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = if_else(grepl("^[1-9]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = as.numeric(book_num),
arrest_code = if_else(!grepl("Arrest Code", X3), X3, as.character(NA)),
book_date = X4,
charge_desc = if_else(X6 != "Description", X6, as.character(NA)),
jacket_num = if_else(X5 != "Jacket #", X5, as.character(NA)),
#
alias = if_else(X8 == "Alias:", X9, as.character(NA)),
address = if_else(X8 == "Address:", X9, as.character(NA)),
city =  if_else(X8 == "City:", X9, as.character(NA)),
state = if_else(X8 == "State:", X9, as.character(NA)),
zip = if_else(X8 == "Zip Code:", X9, as.character(NA)),
home_phone = if_else(X8 == "Home Phone:", X9, as.character(NA)),
cell_phone = if_else(X8 == "Cell Phone:", X9, as.character(NA)),
gender = if_else(X8 == "Sex:", X9, as.character(NA)),
race = if_else(X8 == "Race:", X9, as.character(NA)),
height = if_else(X8 == "Height:", X9, as.character(NA)),
weight = if_else(X8 == "Weight:", X9, as.character(NA)),
#
maiden_name = if_else(X14 == "Maiden:", X16, as.character(NA)),
religion = if_else(X14 == "Religion:", X16, as.character(NA)),
dob = if_else(X14 == "Date of Birth:", X16, as.character(NA)),
age = if_else(X14 == "Age:", X16, as.character(NA)),
marital_status = if_else(X14 == "Maritial Status:", X16, as.character(NA)),
n_children = if_else(X14 == "# of Children:", X16, as.character(NA)),
nationality = if_else(X14 == "Nationality:", X16, as.character(NA)),
occupation = if_else(X14 == "Occupation:", X16, as.character(NA)),
hair_color = if_else(X14 == "Hair:", X16, as.character(NA)),
eye_color = if_else(X14 == "Eye:", X16, as.character(NA)),
complexion = if_else(X14 == "Complexion:", X16, as.character(NA)),
#
court_type = if_else(X15 != "Court Type", X15, as.character(NA)),
case_num = if_else(X11 != "Case #", X11, as.character(NA)),
bond_amt = if_else(X13 == "Bond", as.numeric(NA), parse_number(X13))
) %>%
dplyr::select(!starts_with("X")) %>%
fill(!charge_desc, .direction = "down") %>%
filter(!is.na(charge_desc))
return(ds_bookings)
}
# Details report ---------------------------------------------------------------
read_bookings_by_date_details_and_charges_report <- function(filename) {
z <- read_csv(filename, trim_ws = T, col_names = F)
ds_bookings <- z %>%
mutate(
def_name = if_else(grepl("^[A-Z]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = if_else(grepl("^[1-9]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = as.numeric(book_num),
arrest_code = if_else(!grepl("Arrest Code", X3), X3, as.character(NA)),
book_date = X4,
charge_desc = if_else(X6 != "Description", X6, as.character(NA)),
jacket_num = if_else(X5 != "Jacket #", X5, as.character(NA)),
#
alias = if_else(X8 == "Alias:", X9, as.character(NA)),
address = if_else(X8 == "Address:", X9, as.character(NA)),
city =  if_else(X8 == "City:", X9, as.character(NA)),
state = if_else(X8 == "State:", X9, as.character(NA)),
zip = if_else(X8 == "Zip Code:", X9, as.character(NA)),
home_phone = if_else(X8 == "Home Phone:", X9, as.character(NA)),
cell_phone = if_else(X8 == "Cell Phone:", X9, as.character(NA)),
gender = if_else(X8 == "Sex:", X9, as.character(NA)),
race = if_else(X8 == "Race:", X9, as.character(NA)),
height = if_else(X8 == "Height:", X9, as.character(NA)),
weight = if_else(X8 == "Weight:", X9, as.character(NA)),
#
maiden_name = if_else(X14 == "Maiden:", X16, as.character(NA)),
religion = if_else(X14 == "Religion:", X16, as.character(NA)),
dob = if_else(X14 == "Date of Birth:", X16, as.character(NA)),
age = if_else(X14 == "Age:", X16, as.character(NA)),
marital_status = if_else(X14 == "Maritial Status:", X16, as.character(NA)),
n_children = if_else(X14 == "# of Children:", X16, as.character(NA)),
nationality = if_else(X14 == "Nationality:", X16, as.character(NA)),
occupation = if_else(X14 == "Occupation:", X16, as.character(NA)),
hair_color = if_else(X14 == "Hair:", X16, as.character(NA)),
eye_color = if_else(X14 == "Eye:", X16, as.character(NA)),
complexion = if_else(X14 == "Complexion:", X16, as.character(NA)),
#
court_type = if_else(X15 != "Court Type", X15, as.character(NA)),
case_num = if_else(X11 != "Case #", X11, as.character(NA)),
bond_amt = if_else(X13 == "Bond", as.numeric(NA), parse_number(X13))
) %>%
dplyr::select(!starts_with("X")) %>%
fill(!charge_desc, .direction = "down") %>%
filter(!is.na(charge_desc))
return(ds_bookings)
}
current_pop <- read_bookings_by_date_details_and_charges_report(paste0("/home/andrew/Documents/GitHub/cjac/data/details-report/", "bookings-by-date-details-with-charges-10-24-2022.csv"))
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
View(current_pop)
current_pop |> n_distinct(def_name)
n_distinct(current_pop$def_name)
View(daily_pop)
daily_pop <- ojo_tbl(schema = "ocdc",
table = "daily_pop") |>
collect()
write_rds(daily_pop, "./data/daily_pop.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
blogdown::serve_site()
View(current_pop)
blogdown::stop_server()
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
)
View(current_people)
current_people |> count(religion) |> arrange(desc(n))
current_people |> count(religion) |> arrange(desc(n)) |> view()
current_people |> count(occupation) |> arrange(desc(n)) |> view()
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN|", address), TRUE, FALSE))
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN", address), TRUE, FALSE))
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN|NONE", address), TRUE, FALSE))
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN|NONE|TANSIT|TRASIENT|N/A", address,
ignore.case = T), TRUE, FALSE))
current_people |> count(homeless)
current_people |> count(homeless) |> janitor::adorn_percentages()
current_people |> count(homeless) |> janitor::adorn_totals() |> janitor::adorn_percentages()
current_people |> count(homeless) |> janitor::adorn_percentages("col")
current_people |> count(race) |> janitor::adorn_percentages("col")
current_people |> count(race) |> janitor::adorn_percentages("col") |> arrange(desc(n))
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(
homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN|NONE|TANSIT|TRASIENT|N/A", address,
ignore.case = T), TRUE, FALSE),
race = if_else(grepl(",", race), "Multiple", race)
)
current_people |> count(race) |> janitor::adorn_percentages("col") |> arrange(desc(n))
current_people |> count(gender) |> janitor::adorn_percentages("col") |> arrange(desc(n))
current_people |>
count(gender)
blogdown:::serve_site()
# Setup ========================================================================
library(ojodb)
library(ggthemes)
library(tidyverse)
library(plotly)
library(shiny)
options(scipen = 999)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.align = 'center',
fig.showtext = TRUE,
out.align = 'center')
# OCDC Data
books <- ojo_tbl(schema = "ocdc",
table = "arrest") |>
collect()
# write_rds(books, "./data/ocdc_books.rds")
# books <- read_rds("./data/ocdc_books.rds")
# daily_pop <- ojo_tbl(schema = "ocdc",
#                      table = "daily_pop") |>
#   collect()
# write_rds(daily_pop, "./data/daily_pop.rds")
daily_pop <- read_rds("./data/daily_pop.rds") |>
filter(day >= ymd("2015-01-01"))
# Details report ---------------------------------------------------------------
read_bookings_by_date_details_and_charges_report <- function(filename) {
z <- read_csv(filename, trim_ws = T, col_names = F)
ds_bookings <- z %>%
mutate(
def_name = if_else(grepl("^[A-Z]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = if_else(grepl("^[1-9]", X2) & X2 != "Booking #" & X2 != "Booking Date:", X2, as.character(NA)),
book_num = as.numeric(book_num),
arrest_code = if_else(!grepl("Arrest Code", X3), X3, as.character(NA)),
book_date = X4,
charge_desc = if_else(X6 != "Description", X6, as.character(NA)),
jacket_num = if_else(X5 != "Jacket #", X5, as.character(NA)),
#
alias = if_else(X8 == "Alias:", X9, as.character(NA)),
address = if_else(X8 == "Address:", X9, as.character(NA)),
city =  if_else(X8 == "City:", X9, as.character(NA)),
state = if_else(X8 == "State:", X9, as.character(NA)),
zip = if_else(X8 == "Zip Code:", X9, as.character(NA)),
home_phone = if_else(X8 == "Home Phone:", X9, as.character(NA)),
cell_phone = if_else(X8 == "Cell Phone:", X9, as.character(NA)),
gender = if_else(X8 == "Sex:", X9, as.character(NA)),
race = if_else(X8 == "Race:", X9, as.character(NA)),
height = if_else(X8 == "Height:", X9, as.character(NA)),
weight = if_else(X8 == "Weight:", X9, as.character(NA)),
#
maiden_name = if_else(X14 == "Maiden:", X16, as.character(NA)),
religion = if_else(X14 == "Religion:", X16, as.character(NA)),
dob = if_else(X14 == "Date of Birth:", X16, as.character(NA)),
age = if_else(X14 == "Age:", X16, as.character(NA)),
marital_status = if_else(X14 == "Maritial Status:", X16, as.character(NA)),
n_children = if_else(X14 == "# of Children:", X16, as.character(NA)),
nationality = if_else(X14 == "Nationality:", X16, as.character(NA)),
occupation = if_else(X14 == "Occupation:", X16, as.character(NA)),
hair_color = if_else(X14 == "Hair:", X16, as.character(NA)),
eye_color = if_else(X14 == "Eye:", X16, as.character(NA)),
complexion = if_else(X14 == "Complexion:", X16, as.character(NA)),
#
court_type = if_else(X15 != "Court Type", X15, as.character(NA)),
case_num = if_else(X11 != "Case #", X11, as.character(NA)),
bond_amt = if_else(X13 == "Bond", as.numeric(NA), parse_number(X13))
) %>%
dplyr::select(!starts_with("X")) %>%
fill(!charge_desc, .direction = "down") %>%
filter(!is.na(charge_desc))
return(ds_bookings)
}
current_pop <- read_bookings_by_date_details_and_charges_report(paste0("/home/andrew/Documents/GitHub/cjac/data/details-report/", "bookings-by-date-details-with-charges-10-24-2022.csv"))
current_people <- current_pop |>
group_by(book_num) |>
summarize(
def_name = unique(def_name),
gender = unique(gender),
race = unique(race),
religion = unique(religion),
dob = unique(dob),
age = unique(age),
occupation = unique(occupation),
address = unique(address),
n_charges = n(),
n_cases = n_distinct(case_num)
) |>
mutate(
homeless = if_else(grepl("TRANSI|TRANSE|HOMEL|UNKN|NONE|TANSIT|TRASIENT|N/A", address,
ignore.case = T), TRUE, FALSE),
race = if_else(grepl(",", race), "Multiple", race)
)
start_date <- min(daily_pop$day)
end_date <- max(daily_pop$day)
total_bookings <- books |> n_distinct("book_num", na.rm = T)
past_year_bookings <- books |> filter(book_date >= end_date - years(1)) |> nrow()
last_pop_size <- daily_pop |> filter(day == max(day)) |> pull(var = pop)
current_people |> count(gender) |> filter(gender == "Male") |> janitor::adorn_percents("col") |> pull(var = n)
current_people |> count(gender) |> filter(gender == "Male") |> janitor::adorn_percents("col") |> pull(var = n)
current_people |> count(gender) |> filter(gender == "Male") |> janitor::adorn_percents("col") |> pull(var = n)
current_people |> count(gender) |> filter(gender == "Male") |> janitor::adorn_percentages("col") |> pull(var = n)
current_people |> count(gender) |> janitor::adorn_percentages("col") |> filter(gender == "Male") |> pull(var = n)
479300 / 549100
current_people |>
count(gender) |>
ggplot(aes(x = reorder(gender, -n), y = n, fill = gender)) +
geom_col() +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "Number in Oct. 24 Population Snapshot") +
guides(fill = "none") +
theme_clean()
plot_gender_snap <- current_people |>
count(gender) |>
ggplot(aes(x = reorder(gender, -n), y = n, fill = gender)) +
geom_col() +
scale_y_continuous(labels = scales::comma) +
labs(x = "",
y = "Number in Oct. 24 Population Snapshot") +
guides(fill = "none") +
theme_clean()
View(daily_pop)
daily_pop |>
pivot_longer(cols = c(day, m_pop, f_pop, o_pop))
daily_pop |>
pivot_longer(cols = c(m_pop, f_pop, o_pop))
daily_pop |>
pivot_longer(cols = c(m_pop, f_pop, o_pop)) |>
ggplot(aes(x = day, y = value, color = name)) +
geom_line()
plot_gender_ot <- daily_pop |>
pivot_longer(cols = c(m_pop, f_pop, o_pop)) |>
ggplot(aes(x = day, y = value, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
labs(title = "",
x = "",
y = "Number in Population Snapshot") +
theme_clean() +
theme(legend.position = "none")
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
